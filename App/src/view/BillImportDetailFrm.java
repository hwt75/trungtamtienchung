/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.BillImportController;
import controller.BillImportDetailController;
import controller.ProductController;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.BillImportDetail;
import model.Product;

/**
 *
 * @author Dell
 */
public class BillImportDetailFrm extends javax.swing.JDialog {

    /**
     * Creates new form BillImportDetailFrm
     */
    DefaultTableModel tableModelBillImportDetail;
    
    List<BillImportDetail> billImportDetailList = new ArrayList<>();
    List<Product> productList = new ArrayList<>();
    
    int idBill;
    int IDStaff;
    public BillImportDetailFrm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        tableModelBillImportDetail = (DefaultTableModel) tableBillImportDetail.getModel();
        
        tableBillImportDetail.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }

            @Override
            public void mousePressed(MouseEvent e) {
                int selectedIndex = tableBillImportDetail.getSelectedRow();
                BillImportDetail billImportDetail = billImportDetailList.get(selectedIndex);
                
                jtfIDProduct.setText(String.valueOf(billImportDetail.getIdProduct()));
                jtfPrice.setText(String.valueOf(billImportDetail.getPrice()));
                jtfCount.setText(String.valueOf(billImportDetail.getCount()));
               
                jtfIDProduct.setEditable(false);
                btnDelete.setEnabled(true);
                btnEdit.setEnabled(true);
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        
        });
    }
    private void showBillImportDetail(int id) {
        billImportDetailList = BillImportDetailController.findAll(id);
        tableModelBillImportDetail.setRowCount(0);
        
        billImportDetailList.forEach((billImportDetail) -> {
            tableModelBillImportDetail.addRow(new Object[] {
                tableModelBillImportDetail.getRowCount() + 1,
                billImportDetail.getIdProduct(),
                billImportDetail.getNameProduct(),
                billImportDetail.getPrice(),
                billImportDetail.getCount()
            });
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableBillImportDetail = new javax.swing.JTable();
        jtfCount = new javax.swing.JTextField();
        jtfIDProduct = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtfPrice = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("ID dược phẩm:");

        jLabel2.setText("Số lượng:");

        tableBillImportDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID dược phẩm", "Tên dược phẩm", "Giá tiền", "Số lượng"
            }
        ));
        jScrollPane2.setViewportView(tableBillImportDetail);

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel3.setText("Giá nhập:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jtfPrice, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtfCount, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtfIDProduct, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfIDProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfCount, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        int idProduct = 0, count = 0, price = 0;
        boolean isOK = true;

        if(jtfIDProduct.getText().length() >= 0) {
            idProduct = Integer.valueOf(jtfIDProduct.getText());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập ID dược phẩm!");
            isOK = false;
        }
        
        if(jtfPrice.getText().length() >= 0) {
            price = Integer.valueOf(jtfPrice.getText());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập giá dược phẩm!");
            isOK = false;
        }

        if(jtfCount.getText().length() >= 0) {
            count = Integer.valueOf(jtfCount.getText());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập số lượng dược phẩm!");
            isOK = false;
        }

        if(isOK) {
            if(ProductController.findByIdProduct(idProduct)) {
                    Date dateNow = new Date();
                    SimpleDateFormat formatDate = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                    BillImportDetail billImportDetail = new BillImportDetail(idBill, idProduct, price, count);
                    BillImportDetailController.insert(billImportDetail);
                    JOptionPane.showMessageDialog(rootPane, "Bạn đã thêm dược phẩm thành công");

                    jtfIDProduct.setText("");
                    jtfCount.setText("");
                    jtfPrice.setText("");

                    int countUpdate = ProductController.findCountProduct(idProduct);
                    countUpdate += count;
                    Product product = new Product(idProduct, countUpdate, IDStaff, formatDate.format(dateNow));
                    ProductController.updateCount(product);
                    BillImportController.updateTotal(idBill, IDStaff, formatDate.format(dateNow));
                    showBillImportDetail(idBill);
            } else {
                JOptionPane.showMessageDialog(rootPane, "ID dược phẩm không tồn tại");
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int idProduct = 0, count = 0, id = 0, price = 0;
        boolean isOK = true;
        int selectedIndex = tableBillImportDetail.getSelectedRow();
        if(selectedIndex >= 0 ) {
            id = billImportDetailList.get(selectedIndex).getId();
            if(jtfIDProduct.getText().length() >= 0) {
                idProduct = Integer.valueOf(jtfIDProduct.getText());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập ID dược phẩm!");
                isOK = false;
            }
            
            if(jtfPrice.getText().length() >= 0) {
                price = Integer.valueOf(jtfPrice.getText());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập giá dược phẩm!");
                isOK = false;
            }

            if(jtfCount.getText().length() >= 0) {
                count = Integer.valueOf(jtfCount.getText());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập số lượng dược phẩm!");
                isOK = false;
            }

            if(isOK) {
                Date dateNow = new Date();
                SimpleDateFormat formatDate = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                int CountOld = BillImportDetailController.findCount(id);
                BillImportDetail billImportDetail = new BillImportDetail(id, idBill, idProduct, price, count);
                BillImportDetailController.update(billImportDetail);
                JOptionPane.showMessageDialog(rootPane, "Bạn đã cập nhật thành công");

                jtfIDProduct.setText("");
                jtfCount.setText("");
                jtfPrice.setText("");

                int countUpdate = ProductController.findCountProduct(idProduct);
                countUpdate = countUpdate + count - CountOld;
                Product product = new Product(idProduct, countUpdate, IDStaff, formatDate.format(dateNow));
                ProductController.updateCount(product);
                BillImportController.updateTotal(idBill, IDStaff, formatDate.format(dateNow));
                showBillImportDetail(idBill);
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedIndex = tableBillImportDetail.getSelectedRow();
        if (selectedIndex >= 0 ){
            int id = billImportDetailList.get(selectedIndex).getId();
            int count = Integer.valueOf(jtfCount.getText());
            int idProduct = Integer.valueOf(jtfIDProduct.getText());
            int option = JOptionPane.showConfirmDialog(this, "Bạn có chắn chắn muốn xóa không?");

            if(option == 0){
                Date dateNow = new Date();
                SimpleDateFormat formatDate = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                BillImportDetailController.delete(id);

                jtfIDProduct.setText("");
                jtfPrice.setText("");
                jtfCount.setText("");

                btnEdit.setEnabled(false);
                btnDelete.setEnabled(false);
                JOptionPane.showMessageDialog(rootPane, "Bạn đã xóa thành công");
                
                int countUpdate = ProductController.findCountProduct(idProduct);
                countUpdate -= count;
                Product product = new Product(idProduct, countUpdate, IDStaff, formatDate.format(dateNow));
                ProductController.updateCount(product);
                BillImportController.updateTotal(idBill, IDStaff, formatDate.format(dateNow));
                showBillImportDetail(idBill);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillImportDetailFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillImportDetailFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillImportDetailFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillImportDetailFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BillImportDetailFrm dialog = new BillImportDetailFrm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jtfCount;
    private javax.swing.JTextField jtfIDProduct;
    private javax.swing.JTextField jtfPrice;
    private javax.swing.JTable tableBillImportDetail;
    // End of variables declaration//GEN-END:variables
    public void getIDBill(int id, int idStaff) {
        idBill = id;
        IDStaff = idStaff;
        showBillImportDetail(idBill);
    }
    
}
